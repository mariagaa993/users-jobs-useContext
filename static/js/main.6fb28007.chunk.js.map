{"version":3,"sources":["components/navbar/icon-nav.svg","components/modal/close-button.svg","components/navbar/Navbar.js","components/contentInit/ContentInit.js","components/pages/Home.js","components/table/Table.js","components/contentContainer/ContentContainer.js","contexts/UserContext.js","components/modal/Modal.js","reducers/UsersReducer.js","services/UsersService.js","components/userModal/UserModal.js","components/newUserModal/NewUserModal.js","reducers/JobsReducer.js","services/JobsService.js","components/pages/UserPage.js","contexts/JobContext.js","components/jobModal/JobModal.js","components/pages/JobPage.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","src","iconNav","to","ContentInit","children","Home","Table","headers","map","header","ContentContainer","UserContext","createContext","Modal","title","close","type","onClick","closeButton","usersReducer","state","action","users","addU","user","id","editU","name","jobId","filter","deleteU","urlUsers","getUsers","a","axios","get","res","data","Error","addUser","newUser","newJob","addNewUser","post","editUser","selectedUser","newName","newJobId","changeUser","put","deleteUser","delete","UserModal","useContext","jobs","setDisplayUserModal","usersDispatch","useState","setNewName","setNewJobId","save","defaultValue","onChange","event","target","value","job","NewUserModal","setDisplayNewUser","setNewUser","placeholder","disabled","selected","jobsReducer","editJ","deleteJ","urlJobs","getJobs","editJob","selectedJob","changeJob","deleteJob","UserPage","useReducer","jobsDispatch","setSelectedUser","displayNewUser","displayUserModal","useEffect","then","deleteUsers","Provider","icon","faUserPlus","style","marginLeft","find","key","avatar","faUserEdit","faTrash","JobContext","JobModal","setDisplayJobModal","setNewJob","JobPage","displayJobModal","setSelectedJob","deleteJobs","editJobs","Footer","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6fb28007.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-nav.18b6fa13.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-button.aeec2863.svg\";","import React from 'react';\r\nimport './Navbar.scss';\r\nimport iconNav from './icon-nav.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n\t\t<nav className=\"nav\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li><img className=\"icon-nav\" src={iconNav} /></li>\r\n\t\t\t\t<li><Link className=\"link\" to=\"/\">Home</Link></li>\r\n\t\t\t\t<li><Link className=\"link\" to=\"/users\">Users</Link></li>\r\n\t\t\t\t<li><Link className=\"link\" to=\"/jobs\">Jobs</Link></li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst ContentInit = ({ children }) => {\r\n    return(\r\n        <section className=\"content-init\">\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ContentInit;\r\n","import React from 'react';\r\nimport ContentInit from '../contentInit/ContentInit';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <ContentInit>\r\n            <div className=\"container-home\">\r\n                <div className=\"content-home\">\r\n                    <h1 className=\"home-title\">Users and Jobs App</h1>\r\n                    <h3 className=\"home-subtitle\">This app was created to \r\n                        implement hook: useContext.</h3>\r\n                    <p>In the Users Section you can add a new user. You can also \r\n                        edit and delete an existing user. In the Jobs Section \r\n                        you can edit and delete.</p>\r\n                </div>\r\n            </div>\r\n        </ContentInit>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './Table.scss';\r\n\r\nconst Table = ({headers, children}) => {\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                {\r\n                    headers.map(header => {\r\n                        return (\r\n                            <th>{header}</th>\r\n                        )\r\n                    })\r\n                }\r\n            </thead>\r\n            <tbody>\r\n                {children}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport './ContentContainer.scss';\r\n\r\nconst ContentContainer = ({ children }) => {\r\n    return(\r\n        <section className=\"content-container\">\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ContentContainer;\r\n","import {createContext} from 'react';\r\n\r\nconst UserContext = createContext(null);\r\n\r\nexport default UserContext;\r\n","import React, { Fragment } from \"react\";\r\nimport './Modal.scss';\r\nimport closeButton from './close-button.svg';\r\n\r\nconst Modal = ({ title, children, close }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"overlay\"></div>\r\n            <section className=\"modal\">\r\n                <header>\r\n                    <h2 className=\"modal-title\">{title}</h2>\r\n                    <button \r\n                        className=\"close-button\"\r\n                        type=\"button\" \r\n                        onClick={close}>\r\n                        <img src={closeButton} />\r\n                        </button>\r\n                </header>\r\n                <article className=\"modal-content\">\r\n                    {children}\r\n                </article>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","export const USERS_INIT = \"USERS_INIT\";\r\nexport const USERS_ADD = \"USERS_ADD\";\r\nexport const USERS_EDIT = \"USERS_EDIT\";\r\nexport const USERS_DELETE = \"USERS_DELETE\";\r\n\r\n\r\nexport const usersReducer = (state, action) => {\r\n    switch (action.type) {\r\n\t\tcase USERS_INIT: \r\n\t\t\treturn action.users;\r\n\t\tcase USERS_ADD:\r\n\t\t\treturn [...state, action.addU];\r\n\t\tcase USERS_EDIT: \r\n\t\t\treturn state.map(user => {\r\n\t\t\t\tif (user.id === action.editU.id) {\r\n\t\t\t\t\tuser.name = action.editU.name;\r\n\t\t\t\t\tuser.jobId = action.editU.jobId;;\r\n\t\t\t\t}\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t);\r\n\t\tcase USERS_DELETE: \r\n\t\t\treturn state.filter(user => user.id !== action.deleteU.id);\r\n      \tdefault:\r\n        \treturn state;\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst urlUsers = 'https://5f518d325e98480016123ada.mockapi.io/api/v1/users/';\r\n\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n        const res = await axios.get(urlUsers);\r\n        return res.data;\r\n    }catch(err) {\r\n        throw new Error(`Unhandled - getUsers: ${err}`);\r\n    }\r\n};\r\n\r\nexport const addUser = async (newUser, newJob) => {\r\n    try {\r\n        const addNewUser = {\r\n            name: newUser,\r\n            jobId: newJob\r\n        };\r\n        const res = await axios.post(urlUsers, addNewUser);\r\n        return res.data;\r\n    }catch(err) {\r\n        throw new Error(`Unhandled - addUser: ${err}`);\r\n    }\r\n};\r\n\r\nexport const editUser = async (selectedUser, newName, newJobId) => {\r\n    try {\r\n        const changeUser = {\r\n            ...selectedUser,\r\n            name: newName,\r\n            jobId: newJobId\r\n        };\r\n        const res = await axios.put(urlUsers + changeUser.id, changeUser);\r\n        return res.data;\r\n    }catch(err) {\r\n        throw new Error(`Unhandled - editUser: ${err}`);\r\n    }\r\n};\r\n\r\nexport const deleteUser = async (user) => {\r\n    try {\r\n        const res = await axios.delete(urlUsers + user.id);\r\n        return res.data;\r\n    }catch(err) {\r\n        throw new Error(`Unhandled - deleteUser: ${err}`);\r\n    }\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport Modal from '../modal/Modal';\r\nimport UserContext from '../../contexts/UserContext';\r\nimport { USERS_EDIT } from '../../reducers/UsersReducer';\r\nimport { editUser } from '../../services/UsersService';\r\n\r\nconst UserModal = () => {\r\n    const { jobs, setDisplayUserModal, selectedUser, usersDispatch } = useContext(UserContext);\r\n    const [newName, setNewName] = useState(selectedUser);\r\n    const [newJobId, setNewJobId] = useState(selectedUser.jobId);\r\n\r\n    const changeName = event => setNewName(event.target.value);\r\n    const changeJobId = event => setNewJobId(event.target.value);\r\n\r\n    const save = async () => {\r\n        const editU = await editUser(selectedUser, newName, newJobId);\r\n        usersDispatch({type: USERS_EDIT, editU});\r\n        close();\r\n    };\r\n\r\n    const close = () => setDisplayUserModal(false);\r\n\r\n    return (\r\n        <Modal title=\"Edit User\" close={close}>\r\n            <form>\r\n                <input type=\"text\" defaultValue={selectedUser.name} onChange={changeName} />\r\n                <select defaultValue={selectedUser.jobId} onChange={changeJobId}>\r\n                    {\r\n                        jobs.map(job => {\r\n                            return (\r\n                                <option value={job.id}>\r\n                                    {job.name}\r\n                                </option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n                <button className=\"button-modal\" type=\"button\" onClick={save}>Save</button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default UserModal;\r\n","import React, { useState, useContext } from 'react';\r\nimport Modal from '../modal/Modal';\r\nimport UserContext from '../../contexts/UserContext';\r\nimport { USERS_ADD } from '../../reducers/UsersReducer';\r\nimport { addUser } from '../../services/UsersService';\r\n\r\nconst NewUserModal = () => {\r\n    const { jobs, setDisplayNewUser, usersDispatch } = useContext(UserContext);\r\n    const [newUser, setNewUser] = useState('');\r\n    const [newJobId, setNewJobId] = useState('');\r\n\r\n    const changeName = event => setNewUser(event.target.value);\r\n    const changeJobId = event => setNewJobId(event.target.value);\r\n\r\n    const addNewUser = async () => {\r\n        const addU = await addUser(newUser, newJobId);\r\n        usersDispatch({type: USERS_ADD, addU});\r\n        close();\r\n    };\r\n\r\n    const close = () => setDisplayNewUser(false);\r\n\r\n    return (\r\n        <Modal title=\"New User\" close={close}>\r\n            <form>\r\n                <input type=\"text\" onChange={changeName} placeholder=\"Full name\" />\r\n                <select defaultValue=\"-1\" onChange={changeJobId}>\r\n                    <option value=\"-1\" disabled selected>Choose job</option>\r\n                    {\r\n                        jobs.map(job => {\r\n                            return (\r\n                                <option value={job.id}>\r\n                                    {job.name}\r\n                                </option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n                <button \r\n                    className=\"button-modal\" \r\n                    type=\"button\" \r\n                    onClick={addNewUser}>\r\n                    Add New User\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default NewUserModal;\r\n","export const JOBS_INIT = \"JOBS_INIT\";\r\nexport const JOBS_EDIT = \"JOBS_EDIT\";\r\nexport const JOBS_DELETE = \"JOBS_DELETE\";\r\n\r\nexport const jobsReducer = (state, action) => {\r\n    switch (action.type) {\r\n      \tcase JOBS_INIT:\r\n\t\t\treturn action.jobs;\r\n\t\tcase JOBS_EDIT: \r\n\t\t\treturn state.map(job => {\r\n\t\t\t\tif (job.id === action.editJ.id) {\r\n\t\t\t\t\tjob.name = action.editJ.name;\r\n\t\t\t\t}\r\n\t\t\t\treturn job;\r\n\t\t\t}\r\n\t\t);\r\n\t\tcase JOBS_DELETE: \r\n\t\t\treturn state.filter(job => job.id !== action.deleteJ.id);\r\n      \tdefault:\r\n        \treturn state;\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst urlJobs = 'https://5f518d325e98480016123ada.mockapi.io/api/v1/jobs/';\r\n\r\n\r\nexport const getJobs = async () => {\r\n    try {\r\n        const res = await axios.get(urlJobs);\r\n        return res.data;\r\n    }catch(err) {\r\n        throw new Error(`Unhandled - getJobs: ${err}`);\r\n    }\r\n};\r\n\r\nexport const editJob = async (selectedJob, newJob) => {\r\n    try {\r\n        const changeJob = {\r\n            ...selectedJob,\r\n            name: newJob\r\n        };\r\n        const res = await axios.put(urlJobs + changeJob.id, changeJob);\r\n        return res.data;\r\n    }catch(err) {\r\n        throw new Error(`Unhandled - editJob: ${err}`);\r\n    }\r\n};\r\n\r\nexport const deleteJob = async (job) => {\r\n    try {\r\n        const res = await axios.delete(urlJobs + job.id);\r\n        return res.data;\r\n    }catch(err) {\r\n        throw new Error(`Unhandled - deleteJob: ${err}`);\r\n    }\r\n}\r\n","import React, { useState, useEffect, useReducer } from 'react';\r\nimport Table from '../table/Table';\r\nimport ContentContainer from '../contentContainer/ContentContainer';\r\nimport UserContext from '../../contexts/UserContext';\r\nimport UserModal from '../userModal/UserModal';\r\nimport NewUserModal from '../newUserModal/NewUserModal';\r\nimport { usersReducer, USERS_INIT, USERS_DELETE } from '../../reducers/UsersReducer';\r\nimport { jobsReducer, JOBS_INIT } from '../../reducers/JobsReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserPlus, faUserEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { getUsers, deleteUser } from '../../services/UsersService';\r\nimport { getJobs } from '../../services/JobsService';\r\n\r\nconst UserPage = () => {\r\n    const [users, usersDispatch] = useReducer(usersReducer, []);\r\n    const [jobs, jobsDispatch] = useReducer(jobsReducer, []);\r\n    const [selectedUser, setSelectedUser] = useState();\r\n    const [displayNewUser, setDisplayNewUser] = useState(false);\r\n    const [displayUserModal, setDisplayUserModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const promise = getUsers();\r\n        promise.then(data => usersDispatch({ type: USERS_INIT, users: data }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const promise = getJobs();\r\n        promise.then(data => jobsDispatch({ type: JOBS_INIT, jobs: data }));\r\n    }, []);\r\n\r\n    const editUser = user => {\r\n        setSelectedUser(user);\r\n        setDisplayUserModal(true);\r\n    };\r\n    \r\n    const deleteUsers = async (user) => {\r\n\t\tconst deleteU = await deleteUser(user)\r\n\t\tusersDispatch({type: USERS_DELETE, deleteU});\r\n\t};\r\n\r\n    return (\r\n        <div className=\"container-page\">\r\n            <UserContext.Provider value={{ \r\n                jobs, \r\n                setDisplayUserModal, \r\n                selectedUser, \r\n                usersDispatch,\r\n                setDisplayNewUser }}>     \r\n                <button \r\n                    className=\"button-new-user\" \r\n                    type=\"button\" \r\n                    onClick={() => setDisplayNewUser(true)} >\r\n                    ADD NEW USER\r\n                    <FontAwesomeIcon \r\n                        icon={faUserPlus} \r\n                        style={{ marginLeft: `5px` }} />\r\n                </button>        \r\n                <ContentContainer>\r\n                    <Table headers={[\"Name\", \"Avatar\", \"Job Title\", \"Actions\"]}>\r\n                        {\r\n                            users.map(user => {\r\n                                const job = jobs.find(job => job.id == user.jobId) || { name: \"Not Found\" };\r\n                                return (\r\n                                    <tr key={user.id}>\r\n                                        <td>{user.name}</td>\r\n                                        <td><img className=\"avatar-img\" src={user.avatar} /></td>\r\n                                        <td>{job.name}</td> \r\n                                        <td>\r\n                                            <button\r\n                                                className=\"button-edit\"\r\n                                                onClick={() => editUser(user)}>\r\n                                                EDIT\r\n                                                <FontAwesomeIcon \r\n                                                    icon={faUserEdit} \r\n                                                    style={{ marginLeft: `5px` }} />\r\n                                            </button>\r\n                                            <button\r\n                                                className=\"button-delete\"\r\n                                                onClick={() => deleteUsers(user) }>\r\n                                                DELETE\r\n                                                <FontAwesomeIcon \r\n                                                    icon={faTrash} \r\n                                                    style={{ marginLeft: `5px` }} />\r\n                                            </button>\r\n                                        </td>      \r\n                                    </tr>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Table>\r\n                </ContentContainer>\r\n                {\r\n                    displayUserModal ?\r\n                        <UserModal />\r\n                    :\r\n                        null \r\n                }\r\n                {\r\n                    displayNewUser ?\r\n                        <NewUserModal />\r\n                    :\r\n                        null \r\n                }\r\n            </UserContext.Provider>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;\r\n","import {createContext} from 'react';\r\n\r\nconst JobContext = createContext(null);\r\n\r\nexport default JobContext;\r\n","import React, { useState, useContext } from 'react';\r\nimport JobContext from '../../contexts/JobContext';\r\nimport Modal from '../modal/Modal';\r\nimport { JOBS_EDIT } from '../../reducers/JobsReducer';\r\nimport { editJob } from '../../services/JobsService';\r\n\r\nconst JobModal = () => {\r\n    const { setDisplayJobModal, selectedJob, jobsDispatch } = useContext(JobContext);\r\n    const [newJob, setNewJob] = useState(selectedJob);\r\n    const changeJob = event => setNewJob(event.target.value);\r\n\r\n    const save = async () => {\r\n        const editJ = await editJob(selectedJob, newJob);\r\n        jobsDispatch({type: JOBS_EDIT, editJ});\r\n        close();\r\n    };\r\n\r\n    const close = () => setDisplayJobModal(false);\r\n        \r\n    return (\r\n        <Modal title=\"Edit Job\" close={close}>\r\n            <form>\r\n                <input type=\"text\" defaultValue={selectedJob.name} onChange={changeJob}/>               \r\n                <button className=\"button-modal\" type=\"button\" onClick={save}>Save</button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default JobModal;\r\n","import React, { useState, useEffect, useReducer } from 'react';\r\nimport Table from '../table/Table';\r\nimport JobModal from '../jobModal/JobModal';\r\nimport JobContext from '../../contexts/JobContext';\r\nimport ContentContainer from '../contentContainer/ContentContainer';\r\nimport { jobsReducer, JOBS_INIT, JOBS_DELETE } from '../../reducers/JobsReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { getJobs, deleteJob } from '../../services/JobsService';\r\n\r\nconst JobPage = () => {\r\n\tconst [jobs, jobsDispatch] = useReducer(jobsReducer, []);\r\n    const [displayJobModal, setDisplayJobModal] = useState(false);\r\n\tconst [selectedJob, setSelectedJob] = useState();\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst promise = getJobs();\r\n\t\tpromise.then(data => jobsDispatch({ type: JOBS_INIT, jobs: data }));\r\n  \t}, []);\r\n    \r\n    const editJobs = job => {\r\n        setSelectedJob(job);\r\n        setDisplayJobModal(true);\r\n    };\r\n\t\r\n\tconst deleteJobs = async (job) => {\r\n\t\tconst deleteJ = await deleteJob(job)\r\n\t\tjobsDispatch({type: JOBS_DELETE, deleteJ});\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<div className=\"container-page\">\r\n\t\t\t<JobContext.Provider value={{ selectedJob, setDisplayJobModal, jobsDispatch }}>\r\n\t\t\t\t<ContentContainer>\r\n\t\t\t\t\t<Table headers={[\"Job Title\", \"Actions\"]}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tjobs.map(job => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<tr key={job.id}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{job.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => editJobs(job)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tEDIT\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon \r\n\t\t\t\t\t\t\t\t\t\t\t\ticon={faUserEdit} \r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginLeft: `5px` }} />\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"button-delete\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteJobs(job)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDELETE\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon \r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={faTrash} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginLeft: `5px` }} />\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</ContentContainer>\r\n\t\t\t\t{ \r\n\t\t\t\t\tdisplayJobModal ? \r\n\t\t\t\t\t\t<JobModal /> \r\n\t\t\t\t\t: \r\n\t\t\t\t\t\tnull \r\n\t\t\t\t}\r\n\t\t\t</JobContext.Provider>\r\n\t\t</div>\r\n  \t);\r\n}\r\n\r\nexport default JobPage;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return <footer>&copy; - Created by Maria Alarcon💖</footer>\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Navbar from './components/navbar/Navbar';\r\nimport Home from './components/pages/Home';\r\nimport UserPage from './components/pages/UserPage';\r\nimport JobPage from './components/pages/JobPage';\r\nimport Footer from './components/footer/Footer';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  \treturn (\r\n\t\t<Router>\r\n        \t<div>\r\n          \t\t<Navbar /> \r\n          \t\t<Switch>\r\n            \t\t<Route exact path=\"/\" component={Home} />\r\n            \t\t<Route path=\"/users\" component={UserPage} />\r\n            \t\t<Route path=\"/jobs\" component={JobPage} />\r\n          \t\t</Switch>\r\n          \t\t<Footer />\r\n        \t</div>\r\n      \t</Router>\r\n  \t);\r\n}\r\n\r\nexport default App;\r\n\r\n/* \r\n\t<Fragment>\r\n\t  \t\t<Navbar />\r\n\t\t\t<ContentInit />\r\n\t\t\t<Footer />\r\n    \t</Fragment>\r\n*/\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}